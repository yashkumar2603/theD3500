---
import { ViewTransitions } from "astro:transitions";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import "@fontsource-variable/overpass-mono";
import "@fontsource-variable/inconsolata";
import { getImage } from "astro:assets";
let baseUrl = new URL(Astro.request.url).origin;

const metaImage = await getImage({
  src: "https://cdn.erfianugrah.com/Tenhult_3.JPG",
  alt: "cover_image",
  inferSize: true,
  height: "720",
  decoding: "async",
  format: "webp",
  loading: "lazy",
});

const favicon_webp = await getImage({
  src: "https://cdn.statically.io/gh/yashkumar2603/PhotoCDN/main/uploads/logo.png",
  alt: "favicon",
  inferSize: true,
  height: "400",
  decoding: "async",
  format: "webp",
  loading: "lazy",
});

const pageTitle = "TheD3500 | Yash Kumar";
const metaDescription = "24.2 megapixel life";
const {
  image,
  description,
  author,
  pubDate,
  updatedDate,
  title,
  site_name,
  alt,
  is404Page = false,
} = Astro.props;

const backgroundImageUrl = "";
---

<html class="bg-[rgb(244,242,238)] dark:bg-[rgb(34,33,37)]" lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/webp" href={favicon_webp.src} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <meta name="og:title" content={title || pageTitle} />
    <meta name="og:description" content={description || metaDescription} />
    <meta name="description" content={description || metaDescription} />
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content={site_name || "stoicopa"} />
    <meta name="og:image" content={image || `${baseUrl}${metaImage?.src}`} />
    <meta name="article:author" content={author || "Erfi Anugrah"} />
    <meta name="article:published_time" content={pubDate} />
    <meta name="article:modified_time" content={updatedDate} />
    <meta name="og:url" content={Astro.url} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content={Astro.site} />
    <meta property="twitter:url" content={Astro.url} />
    <meta
      name="twitter:card"
      content={image || `${baseUrl}${metaImage?.src}`}
    />
    <meta name="twitter:title" content={title || pageTitle} />
    <meta name="twitter:description" content={description || metaDescription} />
    <meta
      name="twitter:image"
      content={image || `${baseUrl}${metaImage?.src}`}
    />
    <title>{pageTitle}</title>
    <ViewTransitions />
  </head>
  <body
    class="flex flex-col flex-wrap justify-between md:pt-8 md:pr-16 md:pb-8 md:pl-16 p-8 max-w-full min-h-screen dark:bg-[rgb(34,33,37)] dark:text-[rgb(245,245,245)]"
    style={`background-image: url(${backgroundImageUrl}); background-size: cover; background-position: center; background-attachment: fixed;`}
  >
    <Header is404Page={is404Page} />
    <slot />
    <Footer />
  </body>
</html>

<style is:global>
  .astro-code,
  .astro-code span {
    background-color: var(--shiki-light-bg) !important;
    color: var(--shiki-light) !important;
    font-style: var(--shiki-light-font-style) !important;
    font-weight: var(--shiki-light-font-weight) !important;
    text-decoration: var(--shiki-light-text-decoration) !important;
  }
  .dark .astro-code,
  .dark .astro-code span {
    background-color: var(--shiki-dark-bg) !important;
    color: var(--shiki-dark) !important;
    font-style: var(--shiki-dark-font-style) !important;
    font-weight: var(--shiki-dark-font-weight) !important;
    text-decoration: var(--shiki-dark-text-decoration) !important;
  }
</style>
